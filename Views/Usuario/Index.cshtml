@model IEnumerable<proyecto_inmobiliaria.Dtos.response.UsuarioResponseDTO>

@{
    ViewData["Title"] = "Usuarios";
    int paginaActual = ViewData["PaginaActual"] != null ? (int)ViewData["PaginaActual"]! : 1;
    int totalPaginas = ViewData["TotalPaginas"] != null ? (int)ViewData["TotalPaginas"]! : 1;
}

<h1>
    Usuarios
    <div class="btn-group float-right">
        <a class="btn btn-primary" asp-action="Registro" title="Crear Usuario">
            <i class="fa-solid fa-plus"></i> Crear
        </a>
    </div>
</h1>

<div class="table-responsive">
    <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
            <tr>
                <th class="text-center">Id</th>
                <th>Nombre</th>
                <th>Email</th>
                <th>Rol</th>
                <th class="text-center">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var usuario in Model)
            {
                var formId = $"formEliminar_{usuario.IdUsuario}";
                <tr>
                    <td class="text-center">@usuario.IdUsuario</td>
                    <td>@usuario.NombreUsuario</td>
                    <td>@usuario.Email</td>
                    <td>
                        @{
                            string claseBadge = "bg-secondary";
                            switch (usuario.Rol.ToString())
                            {
                                case "Administrador":
                                    claseBadge = "bg-danger";
                                    break;
                                case "Empleado":
                                    claseBadge = "bg-primary";
                                    break;
                            }
                        }
                        <span class="badge @claseBadge fs-6">@usuario.Rol</span>
                    </td>
                    <td class="text-center">
                        <div class="btn-group" role="group">
                            <a class="btn btn-sm btn-primary" asp-action="Perfil" asp-route-idUsuario="@usuario.IdUsuario" title="Editar">
                                <i class="fa-solid fa-pen"></i> Editar
                            </a>

                            <form asp-action="Baja" method="post" class="d-inline" id="@formId">
                                <input type="hidden" name="idUsuario" value="@usuario.IdUsuario" />
                                <button type="button" class="btn btn-sm btn-danger" title="Eliminar"
                                        onclick="mostrarModalConfirmacion('Confirmar eliminación',
                                        '¿Seguro que querés eliminar al usuario @usuario.NombreUsuario?',
                                        '@formId')">
                                    <i class="fa-solid fa-trash-can"></i> Eliminar
                                </button>
                            </form>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<nav aria-label="Paginación">
    <ul class="pagination justify-content-center">
        <li class="page-item @(paginaActual == 1 ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-route-paginaNro="@(paginaActual - 1)">Anterior</a>
        </li>

        @for (int i = 1; i <= totalPaginas; i++)
        {
            <li class="page-item @(i == paginaActual ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-paginaNro="@i">@i</a>
            </li>
        }

        <li class="page-item @(paginaActual == totalPaginas ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-route-paginaNro="@(paginaActual + 1)">Siguiente</a>
        </li>
    </ul>
</nav>

@await Html.PartialAsync("_ModalConfirmacion", ("", "", ""))
@await Html.PartialAsync("_ModalMensaje", TempData["ErrorMensaje"] as string)
<script src="~/js/modalReutilizable.js"></script>