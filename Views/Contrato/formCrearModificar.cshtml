@model proyecto_inmobiliaria.Dtos.request.ContratoRequestDTO

@{
    bool crearContrato = Model.IdContrato == 0;
    ViewData["Title"] = crearContrato ? "Crear Contrato" : "Editar Contrato";
}

<h2>@ViewData["Title"]</h2>

<form asp-action="@(crearContrato ? "Crear" : "Modificar")" method="post">
    <input type="hidden" asp-for="IdContrato" />
    @if (crearContrato)
    {
        <div class="form-group">
            <label for="filtroDireccion">Filtrar por dirección</label>
            <input type="text" id="filtroDireccion" class="form-control" placeholder="Ingrese dirección..." />
        </div>

        <div class="form-group">
            <label asp-for="IdInmueble" class="control-label">Inmueble</label>
            <select id="selectInmueble" asp-for="IdInmueble" class="form-control" asp-items="ViewBag.Inmuebles">
                @if (ViewBag.Inmuebles != null && ViewBag.Inmuebles.Count > 0)
                {
                    <option value="@ViewBag.Inmuebles[0].Value" selected>@ViewBag.Inmuebles[0].Text</option>
                    @for (int i = 1; i < ViewBag.Inmuebles.Count; i++)
                    {
                        <option value="@ViewBag.Inmuebles[i].Value">@ViewBag.Inmuebles[i].Text</option>
                    }
                }
            </select>
            <span asp-validation-for="IdInmueble" class="text-danger"></span>
        </div>


        <div class="form-group">
            <label>Documento Inquilino</label>
            <div class="input-group">
                <input type="text" id="docInquilino" class="form-control" placeholder="Ingrese documento..." />
                <button type="button" id="btnBuscar" class="btn btn-outline-primary">Buscar</button>
            </div>
            <span class="text-danger" id="errorInquilino"></span>
        </div>

        <div id="inquilinoInfo" style="display:none; margin-top:10px;" class="alert alert-info">
            <p><strong>Inquilino encontrado:</strong> <span id="nombreInquilino"></span></p>
            <input type="hidden" asp-for="IdInquilino" id="idInquilino" />
        </div>
    }

    <div class="form-group">
        <label asp-for="Monto" class="control-label"></label>
        <input asp-for="Monto" class="form-control" type="number" step="0.01" min="0" />
        <span asp-validation-for="Monto" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="FechaDesde" class="control-label"></label>
        <input asp-for="FechaDesde" class="form-control" type="date" readonly
            value="@DateTime.Today.ToString("yyyy-MM-dd")" />
        <small class="form-text text-muted">El contrato comenzará a partir de hoy.</small>
        <span asp-validation-for="FechaDesde" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="FechaHasta" class="control-label"></label>
        <input asp-for="FechaHasta" class="form-control" type="date"
            min="@DateTime.Today.AddDays(30).ToString("yyyy-MM-dd")" />
        <small class="form-text text-muted">
            La fecha de finalización debe ser al menos 30 días después del inicio.
        </small>
        <span asp-validation-for="FechaHasta" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>
    <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
</form>

@section Scripts {
    <script>
        const form = document.querySelector("form");
        const idInquilinoInput = document.getElementById("idInquilino");
        const errorInquilino = document.getElementById("errorInquilino");

        form.addEventListener("submit", function (e) {
            if (!idInquilinoInput.value) {
                e.preventDefault();
                errorInquilino.innerText = "Debe buscar y seleccionar un inquilino antes de guardar.";
            }
        });

        // Filtro por dirección
        document.getElementById("filtroDireccion")?.addEventListener("input", function () {
            var filtro = this.value;

            fetch(`/Inmueble/FiltrarPorDireccion?direccion=${encodeURIComponent(filtro)}`)
                .then(response => response.json())
                .then(data => {
                    var select = document.getElementById("selectInmueble");
                    select.innerHTML = '<option value="">-- Seleccionar Inmueble --</option>';

                    data.forEach(function (inmueble) {
                        var option = document.createElement("option");
                        option.value = inmueble.idInmueble;
                        option.text = inmueble.direccion;
                        select.appendChild(option);
                    });
                })
                .catch(err => console.error("Error al filtrar inmuebles:", err));
        });

        // Busqueda inquilino por documento
        document.getElementById("btnBuscar")?.addEventListener("click", function () {
            var documento = document.getElementById("docInquilino").value;

            fetch(`/Inquilino/BuscarPorDocumento?documento=${documento}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        document.getElementById("inquilinoInfo").style.display = "block";
                        document.getElementById("nombreInquilino").innerText = data.data.nombre;
                        idInquilinoInput.value = data.data.idInquilino;
                        errorInquilino.innerText = "";
                    } else {
                        document.getElementById("inquilinoInfo").style.display = "none";
                        idInquilinoInput.value = "";
                        errorInquilino.innerText = data.message;
                    }
                })
                .catch(err => {
                    document.getElementById("inquilinoInfo").style.display = "none";
                    idInquilinoInput.value = "";
                    errorInquilino.innerText = "Error al buscar inquilino.";
                });
        });
    </script>
}
